ext {
    springBootVersion = '2.1.1.RELEASE'
    springCloudVersion = '2.1.3.RELEASE'
    springSecurityVersion = '5.1.0.RELEASE'

    lombokVersion = '1.16.20'
    javaxServletApiVersion = '3.1.0'
    gsonVersion = '2.8.2'
    powerMockVersion = "1.7.3"
    jacksonCoreVersion = "2.9.6"
    eurekaClientVersion = '1.8.6'
    swaggerJerseyJaxrsVersion = '1.5.10'
    junitVersion = '4.12'
    logbackVersion = '1.2.3'
    springFoxVersion = '2.8.0'
    javaxValidationApiVersion = "2.0.1.Final"
    snakeyamlVersion = '1.23'
    jerseyVersion = '2.26'
    spring4Version = '4.3.7.RELEASE'
    mockitoCoreVersion = '2.15.0'
    jsonPathVersion = '2.4.0'


    libraries = [
            lombok                             : "org.projectlombok:lombok:${lombokVersion}",
            javax_servlet_api                  : "javax.servlet:javax.servlet-api:${javaxServletApiVersion}",
            gson                               : "com.google.code.gson:gson:${gsonVersion}",
            powermock_api_mockito2             : "org.powermock:powermock-api-mockito2:${powerMockVersion}",
            power_mock_junit4                  : "org.powermock:powermock-module-junit4:${powerMockVersion}",
            power_mock_junit4_rule             : "org.powermock:powermock-module-junit4-rule:${powerMockVersion}",
            jackson_annotations                : "com.fasterxml.jackson.core:jackson-annotations:${jacksonCoreVersion}",
            jackson_dataformat_yaml            : "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonCoreVersion}",
            jackson_databind                   : "com.fasterxml.jackson.core:jackson-databind:${jacksonCoreVersion}",
            eureka_client                      : "com.netflix.eureka:eureka-client:${eurekaClientVersion}",
            swagger_jersey2_jaxrs              : "io.swagger:swagger-jersey2-jaxrs:${swaggerJerseyJaxrsVersion}",
            junit                              : "junit:junit:${junitVersion}",
            logback_classic                    : "ch.qos.logback:logback-classic:${logbackVersion}",
            springFox                          : "io.springfox:springfox-swagger2:${springFoxVersion}",
            springFoxWeb                       : "io.springfox:springfox-spring-web:${springFoxVersion}",
            javax_validation                   : "javax.validation:validation-api:${javaxValidationApiVersion}",
            spring_cloud_starter_eureka        : "org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:${springCloudVersion}",
            spring_boot_starter_actuator       : "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}",
            spring_boot_starter_web            : "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
            spring_boot_starter_test           : "org.springframework.boot:spring-boot-starter-test:${springBootVersion}",
            snakeyaml                          : "org.yaml:snakeyaml:${snakeyamlVersion}",
            jersey_server                      : "org.glassfish.jersey.core:jersey-server:${jerseyVersion}",
            jersey_hk2                         : "org.glassfish.jersey.inject:jersey-hk2:${jerseyVersion}",
            jersey_container_servlet_core      : "org.glassfish.jersey.containers:jersey-container-servlet-core:${jerseyVersion}",
            jersey_media_json_jackson          : "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}",
            jersey_test_provider_jdk_http      : "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jdk-http:${jerseyVersion}",
            spring4Mvc                         : "org.springframework:spring-webmvc:${spring4Version}",
            spring4Test                        : "org.springframework:spring-test:${spring4Version}",
            mockito_core                       : "org.mockito:mockito-core:${mockitoCoreVersion}",
            json_path                          : "com.jayway.jsonpath:json-path:${jsonPathVersion}",
    ]
}


